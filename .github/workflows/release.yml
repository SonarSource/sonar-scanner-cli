name: Release
# This workflow is triggered when publishing a GitHub release
on:
  release:
    types:
    - published

env:
  PYTHONUNBUFFERED: 1

jobs:
  release:
    runs-on: ubuntu-latest
    name: Start release process
    timeout-minutes: 60
    steps:
    - name: Run release action
      id: run_release
      uses: SonarSource/gh-action_LT_release@v2
      with:
        distribute: true
        publish_to_binaries: true
        attach_artifacts_to_github_release: true
        run_rules_cov: false
        slack_channel: sonarqube-build
      env:
        ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
        BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
        BINTRAY_TOKEN: ${{ secrets.BINTRAY_TOKEN }}
        BURGRX_USER: ${{ secrets.BURGRX_USER }}
        BURGRX_PASSWORD: ${{ secrets.BURGRX_PASSWORD }}
        CENTRAL_USER: ${{ secrets.CENTRAL_USER }}
        CENTRAL_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
        CIRRUS_TOKEN: ${{ secrets.CIRRUS_TOKEN }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        PATH_PREFIX: ${{ secrets.BINARIES_PATH_PREFIX }}
        GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        RELEASE_SSH_USER: ${{ secrets.RELEASE_SSH_USER }}
        RELEASE_SSH_KEY: ${{ secrets.RELEASE_SSH_KEY }}
        SLACK_API_TOKEN: ${{secrets.SLACK_API_TOKEN }}
    - name: Log outputs
      if: always()
      run: |
        echo "${{ steps.run_release.outputs.releasability }}"
        echo "${{ steps.run_release.outputs.release }}"
        echo "${{ steps.run_release.outputs.distribute_release }}"
    - name: Notify success on Slack
      uses: Ilshidur/action-slack@2.0.0
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      with:
        args: "Release successful for {{ GITHUB_REPOSITORY }} by {{ GITHUB_ACTOR }}"
    - name: Create Release for Docker Image
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.release.tag_name }}
        release_name: ${{ github.event.release.tag_name }}
        body: Release containing ScannerCLI version ${{ github.event.release.tag_name }}
        draft: false
        prerelease: false
        repo: SonarSource/sonar-scanner-cli-docker
    - name: Notify failures on Slack
      uses: Ilshidur/action-slack@2.0.0
      if: failure()
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      with:
        args: "Release failed, see the logs at https://github.com/{{ GITHUB_REPOSITORY }}/actions by {{ GITHUB_ACTOR }}"
