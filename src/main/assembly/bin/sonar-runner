#!/bin/sh
#
# SonarQube Runner Startup Script for Unix
#
# Optional ENV vars:
#   SONAR_RUNNER_OPTS - Parameters passed to the Java VM when running Sonar
#   JAVA_HOME - Location of Java's installation

# The following notice only apply to real_path function copied from
# https://sites.google.com/site/jdisnard/realpath
# Copyright 2010 Jon Disnard. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
# conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
# of conditions and the following disclaimer in the documentation and/or other materials
# provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY Jon Disnard ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those of the
# authors and should not be interpreted as representing official policies, either expressed
# or implied, of Jon Disnard.
real_path () {
  OIFS=$IFS
  IFS='/'
  for I in $1
  do
    # Resolve relative path punctuation.
    if [ "$I" = "." ] || [ -z "$I" ]
      then continue
    elif [ "$I" = ".." ]
      then FOO="${FOO%%/${FOO##*/}}"
           continue
      else FOO="${FOO}/${I}"
    fi

    # Dereference symbolic links.
    if [ -h "$FOO" ] && [ -x "/bin/ls" ]
      then IFS=$OIFS
           set `/bin/ls -l "$FOO"`
           while shift ;
           do
             if [ "$1" = "->" ]
               then FOO=$2
                    shift $#
                    break
             fi
           done
    fi
  done
  IFS=$OIFS
  echo "$FOO"
}

echo WARN: 'sonar-runner' script is deprecated. Please use 'sonar-scanner' instead.

PRG="$0"

if [ -h "$PRG" ] ; then
  # resolve recursively symlinks
  R_PRG=`real_path "$PRG"`
  until [ "$R_PRG" = "$PRG" ]; do
    PRG="$R_PRG"
    R_PRG=`real_path "$PRG"`
  done
fi

sonar_runner_home=`dirname "$PRG"`/..

# make it fully qualified
sonar_runner_home=`cd "$sonar_runner_home" && pwd`

# check that the sonar_runner_home has been correctly set
if [ ! -f "$sonar_runner_home/lib/sonar-scanner-cli-${project.version}.jar" ] ; then
  echo '$sonar_runner_home' does not point to a valid installation directory: $sonar_runner_home
  exit 1
fi

if [ -n "$JAVA_HOME" ]
then
  java_cmd="$JAVA_HOME/bin/java"
else
  java_cmd="`which java`"
fi

if [ -n "$SONAR_RUNNER_OPTS" ] ;
then
  echo WARN: '$SONAR_RUNNER_OPTS' is deprecated. Please use '$SONAR_SCANNER_OPTS' instead.
  if [ -z "$SONAR_SCANNER_OPTS" ] ; then
    SONAR_SCANNER_OPTS=$SONAR_RUNNER_OPTS
  fi
fi

jar_file="${sonar_runner_home}"/lib/sonar-scanner-cli-${project.version}.jar
project_home=`pwd`

#echo "Info: Using sonar-runner at $sonar_runner_home"
#echo "Info: Using java at $java_cmd"
#echo "Info: Using classpath $jar_file"
#echo "Info: Using project $project_home"

exec "$java_cmd" \
  -Djava.awt.headless=true \
  $SONAR_SCANNER_OPTS \
  -classpath  $jar_file \
  "-Dscanner.home=\${sonar_runner_home}" \
  "-Dproject.home=\${project_home}" \
  org.sonarsource.scanner.cli.Main "$@"

